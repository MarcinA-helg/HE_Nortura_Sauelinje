<StructuredTextModel xmlns="http://schemas.datacontract.org/2004/07/Omron.Cxap.Modules.StructuredText.Core" xmlns:i="http://www.w3.org/2001/XMLSchema-instance"><Text>//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xD;
//	NAME:						DigitalFault&#xD;
//	CREATOR:					Daniel Årvik&#xD;
// REQUIREMENTS: 		NX CPU&#xD;
// &#xD;
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xD;
//  VERSION LOG:&#xD;
//	VERSION			DATE					SIGN						DESCRIPTION&#xD;
//	1.0.0					2023-02-10			Daniel Årvik				Initial release&#xD;
//	2.0.0					2025-03-25			William Veim			Rework&#xD;
//================================================================================================================================&#xD;
//&#xD;
//		BESKRIVELSE:&#xD;
//		Gir feil (med forsinkelse) dersom pådrag ikke samsvarer med posisjon på ventil. Basert på Valg_Tilbakemelding sammenlignes pådrag med enten:&#xD;
//		*	Åpen tilbakemelding og lukket tilbakemelding (Valg_Tilbakemelding = TRUE)&#xD;
//		eller&#xD;
//		*	Generell tilbakemelding  (Valg_Tilbakemelding = FALSE)&#xD;
//===============================================================================================================================&#xD;
&#xD;
CASE Feedback_Type OF&#xD;
	&#xD;
	0: //No feedback (no fault)&#xD;
	Wrk_Fault:=FALSE;&#xD;
	&#xD;
	1: //General feedback&#xD;
	Wrk_Fault:= (Output AND NOT Feedback_General) OR (NOT Output AND Feedback_General); //Output open and not feedback open, or output closed and feedback open&#xD;
&#xD;
	2://Open and closed feedback&#xD;
	Wrk_Fault:= (Output AND NOT Feedback_Open) OR (Output AND Feedback_Closed) //Output open and not feedback open, or feedback closed&#xD;
						OR (NOT Output AND NOT Feedback_Closed) OR (NOT Output AND Feedback_Open); //Output closed and not feedback closed, or feedback open&#xD;
&#xD;
END_CASE;&#xD;
&#xD;
//Delay for fault&#xD;
TON_Fault(In:=Wrk_Fault, PT:=Delay);&#xD;
&#xD;
//Timer for reset fault (auto)&#xD;
TON_ResetFault(In:=NOT Wrk_Fault, PT:=Delay);&#xD;
&#xD;
//Fault output based on timer state&#xD;
IF TON_Fault.Q THEN&#xD;
	Fault := TRUE;&#xD;
ELSIF TON_ResetFault.Q OR Reset THEN&#xD;
	Fault := FALSE;&#xD;
END_IF;</Text></StructuredTextModel>