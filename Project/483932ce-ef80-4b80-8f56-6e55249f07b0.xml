<StructuredTextModel xmlns="http://schemas.datacontract.org/2004/07/Omron.Cxap.Modules.StructuredText.Core" xmlns:i="http://www.w3.org/2001/XMLSchema-instance"><Text>//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xD;
//	NAME:						AnalogFault&#xD;
//	CREATOR:					Daniel Årvik&#xD;
// REQUIREMENTS: 		NX CPU&#xD;
// &#xD;
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xD;
//  VERSION LOG:&#xD;
//	VERSION			DATE				SIGN						DESCRIPTION&#xD;
//	1.0.0				2023-02-01			Daniel Årvik				Initial release&#xD;
//	2.0.0				2025-03-14			William Veim			Rework&#xD;
//&#xD;
//================================================================================================================================&#xD;
//&#xD;
//		BESKRIVELSE:&#xD;
//		Gir feil (med forsinkelse) dersom det er for stort avvik mellom pådrag og tilbakemelding.&#xD;
//&#xD;
//===============================================================================================================================&#xD;
&#xD;
// Hvis % avvik er for stor vil det gis alarm etter 10s&#xD;
IF ABS(Output-Feedback) &gt; MaxValue*AllowedDeviation/100 THEN&#xD;
	TON_Fault.In := TRUE;&#xD;
	TON_ResetFault.In := FALSE;&#xD;
ELSE&#xD;
	TON_Fault.In := FALSE;&#xD;
	TON_ResetFault.In := TRUE;&#xD;
END_IF;&#xD;
&#xD;
// Forsinkelse på 10s før alarm går&#xD;
TON_Fault(PT:=Delay);&#xD;
&#xD;
// Forsinkelse på 10s før alarm nullstilles&#xD;
TON_ResetFault(PT:=Delay);&#xD;
&#xD;
// Setter feil basert på tilstand til timere&#xD;
IF TON_Fault.Q THEN&#xD;
	Fault := TRUE;&#xD;
ELSIF TON_ResetFault.Q OR Reset THEN&#xD;
	Fault := FALSE;&#xD;
END_IF;</Text></StructuredTextModel>