<StructuredTextModel xmlns="http://schemas.datacontract.org/2004/07/Omron.Cxap.Modules.StructuredText.Core" xmlns:i="http://www.w3.org/2001/XMLSchema-instance"><Text>//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xD;
//	NAME:				HE_WEG_Drive_Fault&#xD;
//	CREATOR:			Helgevold - Jan Magne Dybvik&#xD;
//&#xD;
// REQUIREMENTS: WEG CFW900&#xD;
// DESCRTIPTION: 	Generates a string with fault code and description&#xD;
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xD;
//  VERSION LOG:&#xD;
//	 VERSION			DATE				SIGN						DESCRIPTION&#xD;
//	 1.0					2025-02-11		Jan Magne Dybvik	Initial release&#xD;
//&#xD;
//================================================================================================================================&#xD;
&#xD;
&#xD;
// Initilize&#xD;
Wrk_FaultValue := WORD_TO_UINT(Inp_InverterFault);&#xD;
Wrk_FaultString := '';&#xD;
Wrk_FaultDescription := '';&#xD;
&#xD;
Wrk_FaultCode := INT_TO_STRING(Wrk_FaultValue);&#xD;
&#xD;
CASE Wrk_FaultValue OF&#xD;
	6:&#xD;
		Wrk_FaultDescription := 'Phase Loss';&#xD;
	21:&#xD;
		Wrk_FaultDescription := 'DC Link Undervoltage';&#xD;
	22:&#xD;
		Wrk_FaultDescription := 'DC LinkOvervoltage';&#xD;
	25:&#xD;
		Wrk_FaultDescription := 'PWM Signal Fault';&#xD;
	30:&#xD;
		Wrk_FaultDescription := 'IGBT U Desat.';&#xD;
	34:&#xD;
		Wrk_FaultDescription := 'IGBT V Desat.';&#xD;
	38:&#xD;
		Wrk_FaultDescription := 'IGBT W Desat.';&#xD;
	42:&#xD;
		Wrk_FaultDescription := 'Braking IGBT Desat.';&#xD;
	48:&#xD;
		Wrk_FaultDescription := 'Overload on the IGBTs';&#xD;
	53:&#xD;
		Wrk_FaultDescription := 'IGBT1 U Overtemp';&#xD;
	54:&#xD;
		Wrk_FaultDescription := 'IGBT1 V Overtemp';&#xD;
	55:&#xD;
		Wrk_FaultDescription := 'IGBT1 W Overtemp';&#xD;
	61:&#xD;
		Wrk_FaultDescription := 'IGBT/DRL Junction Overtemp';&#xD;
	70:&#xD;
		Wrk_FaultDescription := 'DC Link Short Circuit';&#xD;
	71:&#xD;
		Wrk_FaultDescription := 'Overcur. at the Output';&#xD;
	72:&#xD;
		Wrk_FaultDescription := 'Motor Overload';&#xD;
	74:&#xD;
		Wrk_FaultDescription := 'Ground Fault';&#xD;
	78:&#xD;
		Wrk_FaultDescription := 'Motor Overtemp.';&#xD;
	84:&#xD;
		Wrk_FaultDescription := 'Self-diagnosis Fault';&#xD;
	91:&#xD;
		Wrk_FaultDescription := 'External Fault';&#xD;
	99:&#xD;
		Wrk_FaultDescription := 'Invalid Curr. Offset';&#xD;
	104:&#xD;
		Wrk_FaultDescription := 'A/D Converter Fault';&#xD;
	150:&#xD;
		Wrk_FaultDescription := 'Motor Overspeed';&#xD;
	152:&#xD;
		Wrk_FaultDescription := 'Pow.Int. Air Overtemp';&#xD;
	155:&#xD;
		Wrk_FaultDescription := 'Cont. Int. Air Overtemp';&#xD;
	157:&#xD;
		Wrk_FaultDescription := 'InverterUndertemperature';&#xD;
	158:&#xD;
		Wrk_FaultDescription := 'Corrupted Settings';&#xD;
			171:&#xD;
		Wrk_FaultDescription := 'Pow.Fan 1 Speed';	&#xD;
	172:&#xD;
		Wrk_FaultDescription := 'Pow.Fan 2 Speed';	&#xD;
	173:&#xD;
		Wrk_FaultDescription := 'Pow.Fan 3 Speed';&#xD;
	174:&#xD;
		Wrk_FaultDescription := 'Pow.Fan 4 Speed';	&#xD;
	175:&#xD;
		Wrk_FaultDescription := 'Int.Fan 1 Speed';	&#xD;
	176:&#xD;
		Wrk_FaultDescription := 'Int.Fan 2 Speed';&#xD;
	185:&#xD;
		Wrk_FaultDescription := 'Pre-charge Fault';		&#xD;
	605:&#xD;
		Wrk_FaultDescription := 'Power Circuit Off';&#xD;
	606:&#xD;
		Wrk_FaultDescription := 'Power Monitor Comm Lost';&#xD;
	607:&#xD;
		Wrk_FaultDescription := 'SMM Comm Lost';&#xD;
	608:&#xD;
		Wrk_FaultDescription := 'Code Flow Failure';&#xD;
	609:&#xD;
		Wrk_FaultDescription := 'Model Version Incompatible';	&#xD;
&#xD;
ELSE&#xD;
	Wrk_FaultDescription := 'See Manual';&#xD;
&#xD;
END_CASE;&#xD;
&#xD;
&#xD;
// Add Status Code&#xD;
IF TestABit(In:=Cfg_Composition, Pos:=0) THEN&#xD;
	Wrk_FaultString := CONCAT(Wrk_FaultString, Wrk_FaultCode);&#xD;
END_IF;	&#xD;
&#xD;
&#xD;
// Add State Description&#xD;
IF TestABit(In:=Cfg_Composition, Pos:=1) THEN&#xD;
	IF LEN(Wrk_FaultString) &gt; 0 THEN&#xD;
		Wrk_FaultString := CONCAT(Wrk_FaultString, Cfg_Delimiter);&#xD;
	END_IF;&#xD;
	Wrk_FaultString := CONCAT(Wrk_FaultString, Wrk_FaultDescription);&#xD;
END_IF;&#xD;
&#xD;
HE_WEG_Drive_Fault := Wrk_FaultString;</Text></StructuredTextModel>