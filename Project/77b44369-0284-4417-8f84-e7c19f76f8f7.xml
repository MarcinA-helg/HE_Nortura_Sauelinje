<StructuredTextModel xmlns="http://schemas.datacontract.org/2004/07/Omron.Cxap.Modules.StructuredText.Core" xmlns:i="http://www.w3.org/2001/XMLSchema-instance"><Text>//------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ &#xD;
//	NAME: 	HE_FrekvOmf_Vacon100_Wrapper                                                                                                                                                                                                                                                                     &#xD;
//	CREATOR:	                                                                                                                                                                                                                                                  &#xD;
//                                                                                                                                                                                                                                                                                                                            &#xD;
//------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ &#xD;
//  VERSION LOG:                                                                                                                                                                                                                                                                                                   &#xD;
//	VERSION			DATE				SIGN						DESCRIPTION                                                                                                                                                                                                                                 &#xD;
//  2.0					31.01.2025		JMD							Draft&#xD;
//===============================================================================================================================&#xD;
//&#xD;
//		DESCRIPTION:&#xD;
//&#xD;
//&#xD;
//===============================================================================================================================&#xD;
&#xD;
(*************************************************************************&#xD;
 *	Update  Input&#xD;
 *************************************************************************)&#xD;
 &#xD;
// Task interval&#xD;
Wrk_IntervalSec := LINT_TO_REAL(TimeToNanoSec(In:=GetMyTaskInterval())) / 1e9;&#xD;
&#xD;
// Input Parmeter&#xD;
Wrk_VFD_Logic.Inp_STO:=						Inp_Estop;&#xD;
Wrk_VFD_Logic.Inp_LOTO:=					Inp_LOTO; // Lock Out Tag Out (Servicebryter)&#xD;
Wrk_VFD_Logic.Inp_Online:=					Inp_Online;&#xD;
Wrk_VFD_Logic.Inp_Ready:=					Inp_Ready;&#xD;
Wrk_VFD_Logic.Inp_RunningFwd:=			Wrk_Running;&#xD;
Wrk_VFD_Logic.Inp_Error:=						Inp_Feil;&#xD;
Wrk_VFD_Logic.Inp_AutoRunFwd:=		Inp_AutoRunFwd;&#xD;
Wrk_VFD_Logic.Inp_AutoSpeedRef:=		Inp_AutoSpeedRef;&#xD;
Wrk_VFD_Logic.Inp_Warning:=				FALSE;&#xD;
Wrk_VFD_Logic.Inp_Remote:=					TRUE;&#xD;
Wrk_VFD_Logic.Inp_VoltageEnabled:=	TRUE;&#xD;
Wrk_VFD_Logic.Inp_LocalStop	:=				FALSE;&#xD;
Wrk_VFD_Logic.Inp_ComFault:=				FALSE;&#xD;
Wrk_VFD_Logic.Cfg_AutoInUse:=			TRUE;&#xD;
Wrk_VFD_Logic.Inp_AlmSuppress:=			Inp_AlmSuppress;&#xD;
Wrk_VFD_Logic.Inp_AlmSuppressDesc:= 	Inp_AlmSuppressDesc;&#xD;
Wrk_VFD_Logic.Cfg_AlmSuppress_IfOff:=	Cfg_AlmSuppress_IfOff;&#xD;
&#xD;
// Simulation logic data&#xD;
//------------------------&#xD;
&#xD;
Wrk_Running := Wrk_VFD_Logic.Out_RunFwd AND Inp_Ready; // Run Fwd&#xD;
&#xD;
Wrk_SpeedRef := REAL_TO_UINT(ScaleTrans(&#xD;
												  SclIn:=Wrk_VFD_Logic.Val_SpeedRef,&#xD;
												  X0:=0.0,&#xD;
												  Y0:=0.0,&#xD;
												  X1:=100.0,&#xD;
												  Y1:=Cfg_MaxSpeed));&#xD;
&#xD;
IF Wrk_Running THEN&#xD;
	// Ramp tilbakemelding&#xD;
	IF Wrk_ActualSpeed &lt; Wrk_SpeedRef THEN&#xD;
		Wrk_ActualSpeed := Wrk_ActualSpeed + (Cfg_MaxSpeed * Wrk_IntervalSec) / Cfg_AccelerationTime;&#xD;
		IF Wrk_ActualSpeed &gt; Wrk_SpeedRef THEN&#xD;
			Wrk_ActualSpeed := Wrk_SpeedRef;&#xD;
		END_IF;&#xD;
		&#xD;
	ELSIF Wrk_ActualSpeed &gt; Wrk_SpeedRef THEN&#xD;
		Wrk_ActualSpeed := Wrk_ActualSpeed - (Cfg_MaxSpeed * Wrk_IntervalSec) / Cfg_AccelerationTime;&#xD;
		IF Wrk_ActualSpeed &lt; Wrk_SpeedRef THEN&#xD;
			Wrk_ActualSpeed := Wrk_SpeedRef;&#xD;
		END_IF;&#xD;
	END_IF;&#xD;
	&#xD;
ELSIF Inp_Ready THEN&#xD;
	Wrk_ActualSpeed := Wrk_ActualSpeed - (Cfg_MaxSpeed * Wrk_IntervalSec) / Cfg_AccelerationTime;&#xD;
	&#xD;
ELSE&#xD;
	Wrk_ActualSpeed :=0.0;&#xD;
END_IF;&#xD;
&#xD;
// Begrens tilbakemelding&#xD;
IF Wrk_ActualSpeed &gt; Cfg_MaxSpeed THEN&#xD;
	Wrk_ActualSpeed := Cfg_MaxSpeed;&#xD;
ELSIF Wrk_ActualSpeed &lt; 0.0 THEN&#xD;
	Wrk_ActualSpeed := 0.0;&#xD;
END_IF;&#xD;
&#xD;
&#xD;
Wrk_VFD_Logic.Inp_ActSpeed := ScaleTrans(&#xD;
											   		SclIn:=Wrk_ActualSpeed,&#xD;
												  	X0:=0.0,&#xD;
												  	Y0:=0.0,&#xD;
												  	X1:=Cfg_MaxSpeed,&#xD;
												  	Y1:=100.0);&#xD;
&#xD;
	&#xD;
(*************************************************************************&#xD;
 *	Runtime&#xD;
 *************************************************************************)&#xD;
&#xD;
	IF Wrk_VFD_Logic.Sts_RunningFwd THEN&#xD;
			Wrk_Runtime := ADD_TIME(Wrk_Runtime, GetMyTaskInterval()); &#xD;
	END_IF;&#xD;
	&#xD;
&#xD;
	&#xD;
(*************************************************************************&#xD;
 *	Execute VFD Logic&#xD;
 *************************************************************************)&#xD;
Wrk_VFD_Logic(Ext_VFD:=Ext_VFD, &#xD;
							Int_Alarm:=Int_Alarm);&#xD;
&#xD;
(*************************************************************************&#xD;
 *	Update SCADA&#xD;
 *************************************************************************)&#xD;
&#xD;
// Frekvensomformer Status&#xD;
Ext_VFD.EXT_Operator.Actual_State :='Hello';&#xD;
Ext_VFD.EXT_Operator.Active_Error:='World!';&#xD;
Ext_VFD.EXT_Statistics.Runtime_VFD := LINT_TO_UDINT( TimeToSec(Wrk_Runtime) / 3600);</Text></StructuredTextModel>