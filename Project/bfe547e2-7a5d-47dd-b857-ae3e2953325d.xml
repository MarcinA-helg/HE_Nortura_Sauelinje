[SLWD version=1.0]
_EN=Variables
+GN=VAR	GVT=DefaultGroup
++D=USINT	N=IndexA	G=VAR
++D=USINT	N=Tmp_IndexStop	G=VAR
++D=USINT	N=Tmp_IndexStart	G=VAR
++D=ARRAY[0..15] OF USINT	N=Wrk_StackStepOut	R=1	G=VAR
++D=UINT	N=Wrk_StackSizeStepOut	R=1	G=VAR
++D=ARRAY[0..15] OF USINT	N=Wrk_StackStepIn	R=1	IV=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]	G=VAR
++D=UINT	N=Wrk_StackSizeStepIn	R=1	IV=16	G=VAR
++D=BOOL	N=Event_Loss	G=VAR
++D=USINT	N=Tmp_Counter	G=VAR
++D=BOOL	N=Tmp_StepIn	G=VAR
++D=BOOL	N=Tmp_StepOut	G=VAR
++D=UINT	N=Wrk_IndexForDeletion	G=VAR
++D=USINT	N=Wrk_NumberOfRunning	G=VAR
++D=USINT	N=Wrk_NumberOfReady	G=VAR
+GN=VAR_INPUT	GA=InputOutput	GVT=EdgeInputOutputGroup
++D=BOOL	N=ENO	Ord=0	RO=1	G=VAR_OUTPUT
++D=BOOL	N=ENS	Ord=1	G=VAR_INPUT
++D=BOOL	N=Cmd_Alternate	Ord=2	G=VAR_IN_OUT	Com=Alternates if one is available. Set low regardless of the outcome
++D=BOOL	N=Cmd_StepIn	Ord=3	G=VAR_IN_OUT	Com=Step in the next available one. Set low upon stepping in
++D=BOOL	N=Cmd_StepOut	Ord=4	G=VAR_IN_OUT	Com=Step out. Set low upon stepping out.
++D=BOOL	N=Cfg_NewOnLoss	Ord=5	G=VAR_INPUT	Com=TRUE = If one stops due to status 'not ok,' it starts automatically
++D=ARRAY[0..15] OF BOOL	N=Inp_State	Ord=6	G=VAR_INPUT	Com=Word = 16 status bit
++D=ARRAY[0..15] OF BOOL	N=Out_Start	R=1	Ord=7	G=VAR_OUTPUT	Com=Word = 16 Running bit
++D=USINT	N=Out_NumberOfReady	Ord=8	G=VAR_OUTPUT	Com=Number that are ready
++D=USINT	N=Out_NumberOfRunning	Ord=9	G=VAR_OUTPUT	Com=Number that are running
+GN=VAR_EXTERNAL	GA=External	GVT=ExternalGroup
