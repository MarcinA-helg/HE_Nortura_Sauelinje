<StructuredTextModel xmlns="http://schemas.datacontract.org/2004/07/Omron.Cxap.Modules.StructuredText.Core" xmlns:i="http://www.w3.org/2001/XMLSchema-instance"><Text>//------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ &#xD;
//	NAME: 	HE_FrekvOmf_ATV320_Wrapper&#xD;
//	CREATOR:	                                                                                                                                                                                                                                                  &#xD;
//                                                                                                                                                                                                                                                                                                                            &#xD;
//------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ &#xD;
//  VERSION LOG:                                                                                                                                                                                                                                                                                                   &#xD;
//	VERSION			DATE				SIGN						DESCRIPTION                                                                                                                                                                                                                                 &#xD;
// 1.0				31.01.2025			JMD							Draft&#xD;
//	1.0.1				15.04.2025		Ruben Byman				Added Cfg_LOTO_InUse&#xD;
//===============================================================================================================================&#xD;
//&#xD;
//		DESCRIPTION:&#xD;
//&#xD;
//		FUNCTION:&#xD;
//&#xD;
//&#xD;
//===============================================================================================================================&#xD;
&#xD;
&#xD;
(*************************************************************************&#xD;
 *	Update Inputs&#xD;
 *************************************************************************)&#xD;
 &#xD;
// Input Parmeter&#xD;
Wrk_VFD_Logic.Cfg_AutoInUse:=			Cfg_AutoAvailable;&#xD;
Wrk_VFD_Logic.Inp_AutoRunFwd:=		Inp_AutoStartRef;&#xD;
Wrk_VFD_Logic.Inp_AutoSpeedRef:=		Inp_AutoSpeedRef;&#xD;
Wrk_VFD_Logic.Inp_Interlock := 				Inp_Interlock;&#xD;
Wrk_VFD_Logic.Cfg_Interlock_InUse:=	Cfg_Interlock_InUse;&#xD;
Wrk_VFD_Logic.Cfg_STO_InUse:=			Cfg_STO_InUse;&#xD;
Wrk_VFD_Logic.Inp_ComFault:= 				Inp_EIP_Interface[Cfg_DriveIP];&#xD;
Wrk_VFD_Logic.Inp_AlmSuppress:=			Inp_AlmSuppress;&#xD;
Wrk_VFD_Logic.Inp_AlmSuppressDesc:= 	Inp_AlmSuppressDesc;&#xD;
Wrk_VFD_Logic.Cfg_AlmSuppress_IfOff:=	Cfg_AlmSuppress_IfOff;&#xD;
Wrk_VFD_Logic.Cfg_LOTO_InUse :=		Cfg_LOTO_InUse;&#xD;
&#xD;
// Fieldbus Input&#xD;
// Wrk_SwitchedOnDisabled er aktiv i første syklus etter driven spenningssettes. Må derfor ha en timer for å hindre blokkering av start etter spenningsbrudd&#xD;
Wrk_SwitchedOnDisabled_TON(In:=Ext_VFD_Input.ETA.Bit[6], PT:=T#200ms);&#xD;
Wrk_Servicebryter_TON(In:=Inp_LOTO, PT:=T#200ms);&#xD;
&#xD;
&#xD;
Wrk_VFD_Logic.Inp_STO :=	 							NOT Wrk_SwitchedOnDisabled_TON.Q OR FIND(In1:=Ext_VFD.EXT_Operator.Actual_State, In2:='30 - STO') &lt;&gt; 0; //Legg ut på alarm der det er nødstopp (FrekvOmf.Intern.Status_Nodstopp);&#xD;
Wrk_VFD_Logic.Inp_Online :=						    NOT Ext_VFD_Input.IL1R.Bit[0]; // Lock Out Tag Out (Servicebryter)&#xD;
Wrk_VFD_Logic.Inp_Ready := 							Ext_VFD_Input.ETA.Bit[1];&#xD;
Wrk_VFD_Logic.Inp_VoltageEnabled :=			Ext_VFD_Input.ETA.Bit[4];&#xD;
Wrk_VFD_Logic.Inp_RunningFwd := 				Ext_VFD_Input.ETA.Bit[2];&#xD;
Wrk_VFD_Logic.Inp_Error  := 							Ext_VFD_Input.ETA.Bit[3];&#xD;
Wrk_VFD_Logic.Inp_Warning := 						Ext_VFD_Input.ETA.Bit[7];&#xD;
Wrk_VFD_Logic.Inp_Remote :=						Ext_VFD_Input.ETA.Bit[9];&#xD;
Wrk_VFD_Logic.Inp_LocalStop := 					Ext_VFD_Input.ETA.Bit[14];&#xD;
Wrk_VFD_Logic.Inp_LOTO := 							Wrk_Servicebryter_TON.Q;&#xD;
&#xD;
Wrk_VFD_Logic.Inp_ActSpeed := ScaleTrans(&#xD;
											   		SclIn:=INT_TO_REAL(WORD_TO_INT(Ext_VFD_Input.RFR.Wrd)),&#xD;
												  	X0:=REAL#0.0,&#xD;
												  	Y0:=REAL#0.0,&#xD;
												  	X1:=REAL#1000.0,&#xD;
												  	Y1:=REAL#100.0,&#xD;
													SclOfs := REAL#0.0);&#xD;
&#xD;
&#xD;
(*************************************************************************&#xD;
 *	VFD Power, Current, Energy&#xD;
 *************************************************************************)&#xD;
	Wrk_VFD_Logic.Inp_Power :=  (INT_TO_REAL(WORD_TO_INT(Ext_VFD_Input.OPR.Wrd)) /100.0) * Cfg_MotorPower; // kW&#xD;
	&#xD;
	//Wrk_FrekvOmf_Logic.Inp_Energy **Hentes fra explicit message&#xD;
	//Wrk_FrekvOmf_Logic.Inp_Current **Hentes fra explicit message&#xD;
	&#xD;
(*************************************************************************&#xD;
 *	Runtime Statistics&#xD;
 *************************************************************************)&#xD;
&#xD;
	//Wrk_FrekvOmf_Logic.Inp_TotalRunTime **Hentes fra explicit message&#xD;
	&#xD;
(*************************************************************************&#xD;
 *	Execute VFD Logic&#xD;
 *************************************************************************)&#xD;
	Wrk_VFD_Logic(Ext_VFD:=Ext_VFD, &#xD;
							Int_Alarm:=Int_Alarm);&#xD;
&#xD;
(*************************************************************************&#xD;
 *	Update SCADA&#xD;
 *************************************************************************)&#xD;
&#xD;
//Ext_VFD.SCADA.VFD_STATE **Hentes fra explicit message&#xD;
//Ext_VFD.SCADA.ERROR **Hentes fra explicit message&#xD;
&#xD;
(*************************************************************************&#xD;
 *	Update Outputs&#xD;
 *************************************************************************)&#xD;
&#xD;
// Output Parameters&#xD;
Sts_AvailableAuto := Wrk_VFD_Logic.Sts_AvailableAuto;&#xD;
Sts_Interlock := Wrk_VFD_Logic.Sts_Interlock;&#xD;
Sts_RunningFwd := Wrk_VFD_Logic.Sts_RunningFwd;&#xD;
&#xD;
// Fieldbus Output&#xD;
Ext_VFD_Output.CMD.Bit[0] := NOT Inp_Interlock; // Switch on &#xD;
Ext_VFD_Output.CMD.Bit[1] := TRUE;&#xD;
Ext_VFD_Output.CMD.Bit[2] := TRUE;&#xD;
Ext_VFD_Output.CMD.Bit[3] := Wrk_VFD_Logic.Out_RunFwd; //Run fwd&#xD;
Ext_VFD_Output.CMD.Bit[7]:= Wrk_VFD_Logic.Out_FaultReset; // Fault Reset&#xD;
Ext_VFD_Output.LFR.Wrd:= INT_TO_WORD(REAL_TO_INT(ScaleTrans(&#xD;
												SclIn:=Wrk_VFD_Logic.Val_SpeedRef,&#xD;
												X0:=0.0,&#xD;
												Y0:=0.0,&#xD;
												X1:=100.0,&#xD;
												Y1:=100.0)));</Text></StructuredTextModel>