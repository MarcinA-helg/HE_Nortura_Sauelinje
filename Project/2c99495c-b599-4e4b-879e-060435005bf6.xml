<StructuredTextModel xmlns="http://schemas.datacontract.org/2004/07/Omron.Cxap.Modules.StructuredText.Core" xmlns:i="http://www.w3.org/2001/XMLSchema-instance"><Text>//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xD;
//	NAME:					HE_Watchdog&#xD;
//	CREATOR:				Helgevold - Jan Magne Dybvik&#xD;
// REQUIREMENTS: NX CPU&#xD;
//&#xD;
// DESCRTIPTION: 	Funksjonsblokken monitorer endring i enten Boolsk verdi når Cfg_UseNumber er FALSE eller en numerisk verdi når Cfg_UseNumber er TRUE.&#xD;
//								Når Cfg_UseNumber er FALSE sjekkes Inp_Bool for endring, den sjekkes for Stigende og/eller fallende flanke. Valg av flanke konfigureres av Cfg_MonitorRising og Cfg_MonitorFalling.&#xD;
//								Når Cfg_UseNumber er TRUE sjekkes Inp_Number for endring i verdi.&#xD;
//								Når tiden siden endrig overstiger tiden konfigurert i Cfg_TimeOut vil Sts_Timeout bli TRUE.&#xD;
//								Det er 3 utganger for diagnostikk, Val_TimeSinceTrigger som er tidens siden forrige endring, Val_LastSignalInterval som er tiden det tok for forrige endring og Val_LastTriggerTime som er tidspunktet for forrige endring.&#xD;
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xD;
//  VERSION LOG:&#xD;
//	 VERSION			DATE				SIGN						DESCRIPTION&#xD;
//	 1.0					2024-03-25		Jan Magne Dybvik	Initial release&#xD;
//	 1.1					2024-03-26		Jan Magne Dybvik	Lagt til valg for numerisk input&#xD;
//&#xD;
//================================================================================================================================&#xD;
&#xD;
// Update time since trigger&#xD;
wrk_timeSinceTrigger := ADD_TIME(In1 := wrk_timeSinceTrigger, In2 := GetMyTaskInterval());&#xD;
&#xD;
// Monitor for signal edge&#xD;
wrk_risingTrig(Clk:=Inp_Bool);&#xD;
wrk_fallingTrig(Clk:=Inp_Bool);&#xD;
&#xD;
wrk_rising := Cfg_MonitorRising AND wrk_risingTrig.Q ;&#xD;
wrk_falling := Cfg_MonitorFalling AND wrk_fallingTrig.Q;&#xD;
&#xD;
wrk_boolChange :=  wrk_rising OR wrk_falling;&#xD;
wrk_NumChange :=  wrk_lastNumber &lt;&gt; Inp_Number;&#xD;
wrk_lastNumber :=Inp_Number;&#xD;
&#xD;
// Monitor for change in signal&#xD;
IF (NOT Cfg_UseNumber AND wrk_boolChange) OR (Cfg_UseNumber AND wrk_NumChange) THEN&#xD;
	wrk_lastTrigger := GetTime();&#xD;
	Wrk_lastSignalInterval :=wrk_timeSinceTrigger;&#xD;
	wrk_timeSinceTrigger :=T#0s;&#xD;
END_IF;&#xD;
 &#xD;
 // Update outputs&#xD;
Sts_Timeout := wrk_timeSinceTrigger &gt;= Cfg_TimeOut;&#xD;
Val_TimeSinceTrigger := wrk_timeSinceTrigger;&#xD;
Val_LastTriggerTime := wrk_lastTrigger;&#xD;
Val_LastSignalInterval := Wrk_lastSignalInterval;</Text></StructuredTextModel>