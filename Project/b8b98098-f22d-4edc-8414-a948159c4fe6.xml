<StructuredTextModel xmlns="http://schemas.datacontract.org/2004/07/Omron.Cxap.Modules.StructuredText.Core" xmlns:i="http://www.w3.org/2001/XMLSchema-instance"><Text>//------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ &#xD;
//	NAME:			HE_PVSelect                                                                                                                                                                                                                                                                       &#xD;
//	CREATOR:		Helgevold - William Veim                                                                                                                                                                                                                                                              &#xD;
//                                                                                                                                                                                                                                                                                                                            &#xD;
//------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ &#xD;
//  VERSION LOG:                                                                                                                                                                                                                                                                                                   &#xD;
//	VERSION		DATE				SIGN						DESCRIPTION                                                                                                                                                                                                                                 &#xD;
//	1.0.0				2025-03-05		William Veim			Initial release&#xD;
//&#xD;
//==============================================================================================================================&#xD;
//&#xD;
// 		FUNCTIONALITY:&#xD;
// 		Retrieves the desired process value based on user input and/or failure of the current sensor&#xD;
//&#xD;
//==============================================================================================================================&#xD;
&#xD;
(*************************************************************************&#xD;
 *	UPDATING INPUT VARAIBELS TO INTERNAL ARRAY&#xD;
 *************************************************************************)&#xD;
PV_Value[0]:=PV1_Value;&#xD;
PV_Value[1]:=PV2_Value;&#xD;
PV_Value[2]:=PV3_Value;&#xD;
PV_Value[3]:=PV4_Value;&#xD;
PV_Value[4]:=PV5_Value;&#xD;
&#xD;
CASE PV_Select OF&#xD;
&#xD;
	0://PV value 1&#xD;
	PV_Actual := PV_Value[0];&#xD;
	PV_Actual_Y0 := PV_Value[0].EXT_Engineering.ProcessValue_Scale_Y0;&#xD;
	PV_Actual_Y1 := PV_Value[0].EXT_Engineering.ProcessValue_Scale_Y1;&#xD;
	IF (PV_AutoSwitch AND PV_AutoSwitchState &lt;= PV_Value[0].EXT_General.State_Quality) OR NOT PV_Value[0].EXT_Engineering.Active THEN&#xD;
		PV_FindNew := TRUE;&#xD;
	END_IF;&#xD;
	&#xD;
	1://PV value 2&#xD;
	PV_Actual := PV_Value[1];&#xD;
	PV_Actual_Y0 := PV_Value[1].EXT_Engineering.ProcessValue_Scale_Y0;&#xD;
	PV_Actual_Y1 := PV_Value[1].EXT_Engineering.ProcessValue_Scale_Y1;&#xD;
	IF (PV_AutoSwitch AND PV_AutoSwitchState &lt;= PV_Value[1].EXT_General.State_Quality) OR NOT PV_Value[1].EXT_Engineering.Active THEN&#xD;
		PV_FindNew := TRUE;&#xD;
	END_IF;&#xD;
	&#xD;
	2://PV value 3&#xD;
	PV_Actual := PV_Value[2];&#xD;
	PV_Actual_Y0 := PV_Value[2].EXT_Engineering.ProcessValue_Scale_Y0;&#xD;
	PV_Actual_Y1 := PV_Value[2].EXT_Engineering.ProcessValue_Scale_Y1;&#xD;
	IF (PV_AutoSwitch AND PV_AutoSwitchState &lt;= PV_Value[2].EXT_General.State_Quality) OR NOT PV_Value[2].EXT_Engineering.Active THEN&#xD;
		PV_FindNew := TRUE;&#xD;
	END_IF;&#xD;
	&#xD;
	3://PV value 4&#xD;
	PV_Actual := PV_Value[3];&#xD;
	PV_Actual_Y0 := PV_Value[3].EXT_Engineering.ProcessValue_Scale_Y0;&#xD;
	PV_Actual_Y1 := PV_Value[3].EXT_Engineering.ProcessValue_Scale_Y1;&#xD;
	IF (PV_AutoSwitch AND PV_AutoSwitchState &lt;= PV_Value[3].EXT_General.State_Quality) OR NOT PV_Value[3].EXT_Engineering.Active THEN&#xD;
		PV_FindNew := TRUE;&#xD;
	END_IF;&#xD;
	&#xD;
	4://PV value 5&#xD;
	PV_Actual := PV_Value[4];&#xD;
	PV_Actual_Y0 := PV_Value[4].EXT_Engineering.ProcessValue_Scale_Y0;&#xD;
	PV_Actual_Y1 := PV_Value[4].EXT_Engineering.ProcessValue_Scale_Y1;&#xD;
	IF (PV_AutoSwitch AND PV_AutoSwitchState &lt;= PV_Value[4].EXT_General.State_Quality) OR NOT PV_Value[4].EXT_Engineering.Active THEN&#xD;
		PV_FindNew := TRUE;&#xD;
	END_IF;&#xD;
	&#xD;
END_CASE;&#xD;
&#xD;
PV_NotAvailable:=FALSE;&#xD;
&#xD;
IF PV_FindNew THEN&#xD;
	FOR IndexA := 0 TO UPPER_BOUND(PV_Value,1) DO&#xD;
		IF  PV_Value[IndexA].EXT_Engineering.Active AND PV_AutoSwitchState &gt; PV_Value[IndexA].EXT_General.State_Quality THEN&#xD;
			PV_Select := DINT_TO_UINT(IndexA);&#xD;
			PV_Actual := PV_Value[IndexA];&#xD;
			PV_FindNew := FALSE;&#xD;
			EXIT;&#xD;
		END_IF;&#xD;
		IF IndexA = UPPER_BOUND(PV_Value,1) AND PV_FindNew AND (NOT PV_Value[IndexA].EXT_Engineering.Active OR PV_AutoSwitchState &lt;= PV_Value[IndexA].EXT_General.State_Quality) THEN&#xD;
			PV_NotAvailable:=TRUE;&#xD;
		END_IF;&#xD;
	END_FOR;&#xD;
END_IF;</Text></StructuredTextModel>