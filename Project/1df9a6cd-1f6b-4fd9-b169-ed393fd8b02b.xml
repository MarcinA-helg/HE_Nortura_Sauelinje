<StructuredTextModel xmlns="http://schemas.datacontract.org/2004/07/Omron.Cxap.Modules.StructuredText.Core" xmlns:i="http://www.w3.org/2001/XMLSchema-instance"><Text>//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xD;
//	NAME:						Average&#xD;
//	CREATOR:					Daniel Årvik&#xD;
// REQUIREMENTS: 		NX CPU&#xD;
// &#xD;
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xD;
//  VERSION LOG:&#xD;
//	VERSION			DATE				SIGN						DESCRIPTION&#xD;
//	1.0.0				2023-03-06			Daniel Årvik				Initial Release&#xD;
//	2.0.0				2025-04-02			William Veim			Rework&#xD;
//	2.0.1				2025-04-10			Ruben Byman			Removed retain of buffer, and minor bug fixes&#xD;
//&#xD;
//===============================================================================================================================&#xD;
//&#xD;
//		BESKRIVELSE:&#xD;
//		Utfører et løpende gjennomsnitt for å glatte ut inngansverdien. Tidsintervall og antall målinger defineres med input.&#xD;
//&#xD;
//===============================================================================================================================&#xD;
&#xD;
//Resets trigger&#xD;
RE_Puls(Clk:=FALSE);&#xD;
&#xD;
// Update time since trigger&#xD;
Wrk_TimeSinceTrigger := ADD_TIME(In1 := Wrk_TimeSinceTrigger, In2 := GetMyTaskInterval());&#xD;
&#xD;
&#xD;
//Overskriver variabler &#xD;
IF Cfg_SamplingInterval = 0 THEN&#xD;
	Cfg_SamplingInterval := 1;&#xD;
END_IF;&#xD;
&#xD;
IF Cfg_NumberOfValues = 0 THEN&#xD;
	Cfg_NumberOfValues := 1;&#xD;
END_IF;&#xD;
&#xD;
IF Wrk_TimeSinceTrigger &gt;= NanoSecToTime(Cfg_SamplingInterval*1000000) THEN&#xD;
	RE_Puls(Clk:=TRUE);&#xD;
	Wrk_TimeSinceTrigger:=TIME#0ms;&#xD;
END_IF;&#xD;
&#xD;
//Antall målinger kan ikke være mer enn 500&#xD;
IF Cfg_NumberOfValues &gt; DINT_TO_UINT(UPPER_BOUND(GjennomsnittBuffer,1)) THEN&#xD;
	Wrk_NumberOfValues := DINT_TO_UINT(UPPER_BOUND(GjennomsnittBuffer,1));&#xD;
ELSE&#xD;
	Wrk_NumberOfValues := Cfg_NumberOfValues;&#xD;
END_IF;&#xD;
&#xD;
//Tilbakestiller innsamlede verdier&#xD;
IF Inp_Reset THEN&#xD;
	Clear(GjennomsnittBuffer);&#xD;
END_IF;&#xD;
&#xD;
IF RE_Puls.Q THEN&#xD;
	IF NumberUsed &lt; Wrk_NumberOfValues THEN&#xD;
		NumberUsed:=NumberUsed+1;&#xD;
	ELSE&#xD;
		NumberUsed:=Wrk_NumberOfValues;&#xD;
	END_IF;&#xD;
	//Flytter alle verdier&#xD;
	FOR IndexA := NumberUsed TO 1 BY -1 DO&#xD;
		GjennomsnittBuffer[IndexA]:=GjennomsnittBuffer[IndexA-1];&#xD;
	END_FOR;&#xD;
	//Legger inn verdi på første index&#xD;
	GjennomsnittBuffer[0]:= Inp_Value;&#xD;
	SumValues:=0;&#xD;
	FOR IndexA :=0 TO NumberUsed - 1 DO&#xD;
		SumValues:=SumValues+GjennomsnittBuffer[IndexA];&#xD;
	END_FOR;&#xD;
	&#xD;
	Out_Average := LREAL_TO_REAL(SumValues / UINT_TO_REAL(NumberUsed));&#xD;
	&#xD;
END_IF;</Text></StructuredTextModel>