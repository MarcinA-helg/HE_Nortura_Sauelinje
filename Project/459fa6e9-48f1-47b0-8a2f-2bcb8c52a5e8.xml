<StructuredTextModel xmlns="http://schemas.datacontract.org/2004/07/Omron.Cxap.Modules.StructuredText.Core" xmlns:i="http://www.w3.org/2001/XMLSchema-instance"><Text>//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xD;
//	NAME:					HE_SNMP_EncodeString&#xD;
//	CREATOR:				Helgevold - Jan Magne Dybvik&#xD;
// REQUIREMENTS: NX CPU&#xD;
//&#xD;
// DESCRTIPTION: 	Koder SNMP Strengverdi&#xD;
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xD;
//  VERSION LOG:&#xD;
//	 VERSION			DATE				SIGN							DESCRIPTION&#xD;
//	 1.0.0				2024-05-15		Jan Magne Dybvik		Initial release&#xD;
//&#xD;
//================================================================================================================================&#xD;
&#xD;
// Initalize&#xD;
Wrk_BufferUB := UPPER_BOUND(Ext_Buffer, 1);&#xD;
Wrk_BufferLB := LOWER_BOUND(Ext_Buffer, 1);&#xD;
Wrk_ExtBufferSize := Wrk_BufferUB - Wrk_BufferLB + 1;&#xD;
Wrk_Size :=0;&#xD;
Wrk_StringSize := UINT_TO_USINT((GetByteLen(Inp_String)));&#xD;
&#xD;
// Type: Octet String&#xD;
Wrk_Buffer[0] := 16#04;&#xD;
&#xD;
// String size&#xD;
Wrk_Buffer[1] :=USINT_TO_BYTE(Wrk_StringSize);&#xD;
&#xD;
ToAryByte(Inp_String, _LOW_HIGH, Wrk_Buffer[2]);		// Convert string to bytearray&#xD;
&#xD;
// Copy object to external buffer&#xD;
Wrk_Size := Wrk_StringSize + 2;		// Number of bytes to copy&#xD;
IF Wrk_Size &lt;= Wrk_ExtBufferSize THEN	// External buffer has space&#xD;
	MemCopy(In:=Wrk_Buffer[0], AryOut:=Ext_Buffer[Wrk_BufferLB], Size:=Wrk_Size);&#xD;
ELSE&#xD;
	Wrk_Size := 0;&#xD;
END_IF;&#xD;
&#xD;
HE_SNMP_EncodeString := Wrk_Size;		// Return number of bytes added to external array</Text></StructuredTextModel>