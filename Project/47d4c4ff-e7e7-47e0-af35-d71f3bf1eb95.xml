<StructuredTextModel xmlns="http://schemas.datacontract.org/2004/07/Omron.Cxap.Modules.StructuredText.Core" xmlns:i="http://www.w3.org/2001/XMLSchema-instance"><Text>//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xD;
//	NAME:					HE_RT100ParseSMS&#xD;
//	CREATOR:				Helgevold - Jan Magne Dybvik&#xD;
// REQUIREMENTS: NX CPU&#xD;
//&#xD;
// DESCRTIPTION: 	Parse SMS Message from Text string&#xD;
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xD;
//  VERSION LOG:&#xD;
//	 VERSION			DATE				SIGN						DESCRIPTION&#xD;
//	 1.0					2025-03-31		Jan Magne Dybvik	Initial release&#xD;
//&#xD;
//&#xD;
//================================================================================================================================&#xD;
&#xD;
HE_RT100ParseSMS := FALSE;&#xD;
Wrk_RecvMessage := Inp_RecvMessage;&#xD;
&#xD;
Wrk_Pos := FIND(In1:=Wrk_RecvMessage, In2:='+SMS:');&#xD;
IF Wrk_Pos &lt;&gt; 0 THEN&#xD;
	Wrk_RecvMessage := DELETE(In:=Wrk_RecvMessage, L:=Wrk_Pos + 4, P:=1);&#xD;
ELSE &#xD;
	RETURN;&#xD;
END_IF;&#xD;
&#xD;
// The memory index number, use this index to read or delete this message.&#xD;
Wrk_Pos := FIND(In1:=Wrk_RecvMessage, In2:=',');&#xD;
IF Wrk_Pos &lt;&gt; 0 THEN&#xD;
	Wrk_Scratch := LEFT(In:=Wrk_RecvMessage, L:=Wrk_Pos-1);&#xD;
	Wrk_Index := STRING_TO_DINT(In:=Wrk_Scratch);&#xD;
	Wrk_RecvMessage := DELETE(In:=Wrk_RecvMessage, L:=Wrk_Pos, P:=1);&#xD;
ELSE &#xD;
	RETURN;&#xD;
END_IF;&#xD;
&#xD;
// The status of this message. For received messages this can be "REC READ" or "REC UNREAD" depending on whether the messages has been read or listed before.&#xD;
Wrk_Pos := FIND(In1:=Wrk_RecvMessage, In2:='$"');&#xD;
IF Wrk_Pos = 1 THEN&#xD;
	Wrk_RecvMessage := DELETE(In:=Wrk_RecvMessage, L:=1, P:=1);&#xD;
	Wrk_Pos := FIND(In1:=Wrk_RecvMessage, In2:='$"');&#xD;
		Wrk_Scratch := LEFT(In:=Wrk_RecvMessage, L:=Wrk_Pos-1);&#xD;
	Wrk_RecvMessage := DELETE(In:=Wrk_RecvMessage, L:=Wrk_Pos, P:=1);&#xD;
	Wrk_Pos := FIND(In1:=Wrk_RecvMessage, In2:=',');&#xD;
	IF Wrk_Pos = 1 THEN&#xD;
		Wrk_RecvMessage := DELETE(In:=Wrk_RecvMessage, L:=1, P:=1);&#xD;
	END_IF;&#xD;
	Wrk_Status := Wrk_Scratch;&#xD;
ELSE &#xD;
	RETURN;&#xD;
END_IF;&#xD;
&#xD;
// The subscriber number of the person who sent the message.&#xD;
Wrk_Pos := FIND(In1:=Wrk_RecvMessage, In2:='$"');&#xD;
IF Wrk_Pos = 1 THEN&#xD;
	Wrk_RecvMessage := DELETE(In:=Wrk_RecvMessage, L:=1, P:=1);&#xD;
	Wrk_Pos := FIND(In1:=Wrk_RecvMessage, In2:='$"');&#xD;
		Wrk_Scratch := LEFT(In:=Wrk_RecvMessage, L:=Wrk_Pos-1);&#xD;
	Wrk_RecvMessage := DELETE(In:=Wrk_RecvMessage, L:=Wrk_Pos, P:=1);&#xD;
	Wrk_Pos := FIND(In1:=Wrk_RecvMessage, In2:=',');&#xD;
	IF Wrk_Pos = 1 THEN&#xD;
		Wrk_RecvMessage := DELETE(In:=Wrk_RecvMessage, L:=1, P:=1);&#xD;
	END_IF;&#xD;
	Wrk_FromAddress := Wrk_Scratch;&#xD;
ELSE &#xD;
	RETURN;&#xD;
END_IF;&#xD;
&#xD;
// The reference number of this message. Most modems keep this field empty.&#xD;
Wrk_Pos := FIND(In1:=Wrk_RecvMessage, In2:=',');&#xD;
IF Wrk_Pos &lt;&gt; 0 THEN&#xD;
	Wrk_RecvMessage := DELETE(In:=Wrk_RecvMessage, L:=Wrk_Pos, P:=1);&#xD;
ELSE &#xD;
	RETURN;&#xD;
END_IF;&#xD;
&#xD;
// The time the message was forwarded to this phone or modem.&#xD;
Wrk_Pos := FIND(In1:=Wrk_RecvMessage, In2:='$"');&#xD;
IF Wrk_Pos = 1 THEN&#xD;
	Wrk_RecvMessage := DELETE(In:=Wrk_RecvMessage, L:=1, P:=1);&#xD;
	Wrk_Pos := FIND(In1:=Wrk_RecvMessage, In2:='$"');&#xD;
		Wrk_Scratch := LEFT(In:=Wrk_RecvMessage, L:=Wrk_Pos-1);&#xD;
	Wrk_RecvMessage := DELETE(In:=Wrk_RecvMessage, L:=Wrk_Pos, P:=1);&#xD;
	Wrk_Pos := FIND(In1:=Wrk_RecvMessage, In2:=',');&#xD;
	IF Wrk_Pos = 1 THEN&#xD;
		Wrk_RecvMessage := DELETE(In:=Wrk_RecvMessage, L:=1, P:=1);&#xD;
	END_IF;&#xD;
	Wrk_DateTime := Wrk_Scratch;&#xD;
ELSE &#xD;
	RETURN;&#xD;
END_IF;&#xD;
&#xD;
// Unkown&#xD;
Wrk_Pos := FIND(In1:=Wrk_RecvMessage, In2:=',');&#xD;
IF Wrk_Pos &lt;&gt; 0 THEN&#xD;
	Wrk_Scratch := LEFT(In:=Wrk_RecvMessage, L:=Wrk_Pos-1);&#xD;
	Wrk_RecvMessage := DELETE(In:=Wrk_RecvMessage, L:=Wrk_Pos, P:=1);&#xD;
ELSE &#xD;
	RETURN;&#xD;
END_IF;&#xD;
&#xD;
// Unkown&#xD;
Wrk_Pos := FIND(In1:=Wrk_RecvMessage, In2:=',');&#xD;
IF Wrk_Pos &lt;&gt; 0 THEN&#xD;
	Wrk_Scratch := LEFT(In:=Wrk_RecvMessage, L:=Wrk_Pos-1);&#xD;
	Wrk_RecvMessage := DELETE(In:=Wrk_RecvMessage, L:=Wrk_Pos, P:=1);&#xD;
ELSE &#xD;
	RETURN;&#xD;
END_IF;&#xD;
&#xD;
// Unkown&#xD;
Wrk_Pos := FIND(In1:=Wrk_RecvMessage, In2:=',');&#xD;
IF Wrk_Pos &lt;&gt; 0 THEN&#xD;
	Wrk_Scratch := LEFT(In:=Wrk_RecvMessage, L:=Wrk_Pos-1);&#xD;
	Wrk_RecvMessage := DELETE(In:=Wrk_RecvMessage, L:=Wrk_Pos, P:=1);&#xD;
ELSE &#xD;
	RETURN;&#xD;
END_IF;&#xD;
&#xD;
// Unkown&#xD;
Wrk_Pos := FIND(In1:=Wrk_RecvMessage, In2:=',');&#xD;
IF Wrk_Pos &lt;&gt; 0 THEN&#xD;
	Wrk_Scratch := LEFT(In:=Wrk_RecvMessage, L:=Wrk_Pos-1);&#xD;
	Wrk_RecvMessage := DELETE(In:=Wrk_RecvMessage, L:=Wrk_Pos, P:=1);&#xD;
ELSE &#xD;
	RETURN;&#xD;
END_IF;&#xD;
&#xD;
// Unkown&#xD;
Wrk_Pos := FIND(In1:=Wrk_RecvMessage, In2:='$"');&#xD;
IF Wrk_Pos = 1 THEN&#xD;
	Wrk_RecvMessage := DELETE(In:=Wrk_RecvMessage, L:=1, P:=1);&#xD;
	Wrk_Pos := FIND(In1:=Wrk_RecvMessage, In2:='$"');&#xD;
		Wrk_Scratch := LEFT(In:=Wrk_RecvMessage, L:=Wrk_Pos-1);&#xD;
	Wrk_RecvMessage := DELETE(In:=Wrk_RecvMessage, L:=Wrk_Pos, P:=1);&#xD;
	Wrk_Pos := FIND(In1:=Wrk_RecvMessage, In2:=',');&#xD;
	IF Wrk_Pos = 1 THEN&#xD;
		Wrk_RecvMessage := DELETE(In:=Wrk_RecvMessage, L:=1, P:=1);&#xD;
	END_IF;&#xD;
ELSE &#xD;
	RETURN;&#xD;
END_IF;&#xD;
&#xD;
// Unkown&#xD;
Wrk_Pos := FIND(In1:=Wrk_RecvMessage, In2:=',');&#xD;
IF Wrk_Pos &lt;&gt; 0 THEN&#xD;
	Wrk_Scratch := LEFT(In:=Wrk_RecvMessage, L:=Wrk_Pos-1);&#xD;
	Wrk_RecvMessage := DELETE(In:=Wrk_RecvMessage, L:=Wrk_Pos, P:=1);&#xD;
ELSE &#xD;
	RETURN;&#xD;
END_IF;&#xD;
&#xD;
// The actual message data in plain text&#xD;
Wrk_Pos := FIND(In1:=Wrk_RecvMessage, In2:='$R$L');&#xD;
IF Wrk_Pos &lt;&gt; 0 THEN&#xD;
	Wrk_Scratch := LEFT(In:=Wrk_RecvMessage, L:=Wrk_Pos-1);&#xD;
	Wrk_RecvMessage := DELETE(In:=Wrk_RecvMessage, L:=Wrk_Pos+1, P:=1);&#xD;
	Wrk_MessageLen := STRING_TO_UINT(Wrk_Scratch);&#xD;
	Wrk_Message := LEFT(In:=Wrk_RecvMessage, L:= MIN(Wrk_MessageLen, UINT#160));&#xD;
ELSE &#xD;
	RETURN;&#xD;
END_IF;&#xD;
&#xD;
Out_FromAddress := Wrk_FromAddress;&#xD;
Out_DateTime := Wrk_DateTime;&#xD;
Out_Message := Wrk_Message;&#xD;
Val_Index := Wrk_Index;&#xD;
&#xD;
HE_RT100ParseSMS := Wrk_MessageLen &gt; 0;</Text></StructuredTextModel>